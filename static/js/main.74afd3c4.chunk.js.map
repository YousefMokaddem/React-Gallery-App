{"version":3,"sources":["components/SearchForm.js","components/MainNav.js","components/GalleryItem.js","components/Gallery.js","components/NotFound.js","components/Home.js","config.js","App.js","serviceWorker.js","index.js"],"names":["SearchForm","state","submit","handleSubmit","e","preventDefault","_this","props","search","input","value","currentTarget","reset","setState","_this2","this","react_default","a","createElement","Redirect","to","className","onSubmit","type","name","placeholder","ref","required","fill","height","viewBox","width","xmlns","d","Component","MainNav","NavLink","GalleryItem","_ref","url","src","alt","Gallery","urls","loading","searchTerm","lis","map","i","components_GalleryItem","key","length","populate","NotFound","Home","apiKey","App","q","cats","dogs","computers","fetch","concat","then","res","json","photos","photo","farm","server","id","secret","catch","err","console","log","_this3","_this4","HashRouter","Route","render","components_SearchForm","handleSearch","bind","components_MainNav","Switch","path","components_Gallery","exact","component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74afd3c4.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nclass SearchForm extends Component{\r\n  state = {\r\n    submit: false\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.search(this.input.value);\r\n    e.currentTarget.reset();\r\n    //set submit to true for redirect in render func\r\n    this.setState({submit: true});\r\n  }\r\n  render(){\r\n    if(this.state.submit){\r\n      this.setState({\r\n        submit:false\r\n      });\r\n      return <Redirect to='/search' />\r\n    }\r\n    return(\r\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\r\n        <input type=\"search\" name=\"search\" placeholder=\"Search\" ref={(input) => this.input = input} required/>\r\n        <button type=\"submit\" className=\"search-button\">\r\n          <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n          </svg>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n    \r\n  \r\n}\r\nexport default SearchForm;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nconst MainNav = () => {\r\n    return(\r\n        <nav className=\"main-nav\">\r\n        <ul>\r\n          <li><NavLink to={`/cats`}>Cats</NavLink></li>\r\n          <li><NavLink to={`/dogs`}>Dogs</NavLink></li>\r\n          <li><NavLink to={`/computers`}>Computers</NavLink></li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n}\r\n\r\nexport default MainNav;","import React from 'react';\r\n\r\nconst GalleryItem = ({url}) => {\r\n    return (\r\n        <li>\r\n        <img src={url} alt=\"\" />\r\n      </li>\r\n    );\r\n}\r\n\r\nexport default GalleryItem;","import React from 'react';\r\nimport GalleryItem from './GalleryItem';\r\n\r\nconst Gallery = ({urls, loading, searchTerm}) => {\r\n\r\n    const populate = ()=>{\r\n      let lis =  urls.map((url,i) => <GalleryItem key={i} url={url}/>)\r\n      // if there are no images\r\n      if(lis.length === 0){\r\n        //display loading if loading\r\n        if(loading){\r\n          return(\r\n            <li className=\"not-found\">\r\n              <h3>Loading...</h3>\r\n            </li>\r\n          );\r\n        }else{\r\n          //display no results if not loading\r\n          return(\r\n            <li className=\"not-found\">\r\n              <h3>No Results Found</h3>\r\n              <p>You search did not return any results. Please try again.</p>\r\n            </li>\r\n          );\r\n        }\r\n      }else{\r\n        return lis;\r\n      }\r\n    }\r\n    return(\r\n        <div className=\"photo-container\">\r\n        <h2>Results for {searchTerm}</h2>\r\n        <ul>\r\n          {populate()}\r\n        </ul>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Gallery;","import React from 'react';\r\n\r\nconst NotFound = ({url}) => {\r\n    return (\r\n        <h2>404 Page Not Found</h2>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return(\r\n        <h2>Enter a search term or click a link above for images.</h2>\r\n    );\r\n}\r\n\r\nexport default Home;","const apiKey = 'ed23e04c27c008007b020808b181f9ab';\r\n//secret = 19745114242be261\r\nexport default apiKey;","import React, { Component } from 'react';\nimport SearchForm from './components/SearchForm';\nimport MainNav from './components/MainNav';\nimport Gallery from './components/Gallery';\nimport NotFound from './components/NotFound';\nimport Home from './components/Home';\nimport apiKey from './config';\nimport {\n  HashRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\nclass App extends Component {\n  //set state\n  state = {\n    search:{\n      urls: [],\n      loading: true,\n      q: ''\n    },\n    cats:{\n      urls: [],\n      loading: true\n    },\n    dogs:{\n      urls: [],\n      loading: true\n    },\n    computers:{\n      urls: [],\n      loading: true\n    }\n  }\n  //search\n  handleSearch(q){\n    //clear previous search\n    this.setState({\n      search: {\n        urls: [],\n        loading: true\n      }\n    });\n    //search \n    fetch(`https://api.flickr.com/services/rest/?per_page=24&method=flickr.photos.search&api_key=${apiKey}&tags=${q}&format=json&nojsoncallback=1`)\n      .then(res=>res.json())\n      .then(res=>res.photos.photo.map(photo => `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`))\n      .then(res=>this.setState({\n        //set state with new search\n        search:{\n          urls: res,\n          loading: false,\n          q: q\n        }\n      }))\n      .catch(err => console.log('error fetching and parsing data', err));\n  }\n  //fetch data for the 3 buttons\n  componentDidMount(){\n    fetch(`https://api.flickr.com/services/rest/?per_page=24&method=flickr.photos.search&api_key=${apiKey}&tags=cats&format=json&nojsoncallback=1`)\n      .then(res=>res.json())\n      .then(res=>res.photos.photo.map(photo => `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`))\n      .then(res=>this.setState({\n        cats:{\n          urls: res,\n          loading: false\n        }\n      }))\n      .catch(err => console.log('error fetching and parsing data', err));\n    fetch(`https://api.flickr.com/services/rest/?per_page=24&method=flickr.photos.search&api_key=${apiKey}&tags=dogs&format=json&nojsoncallback=1`)\n      .then(res=>res.json())\n      .then(res=>res.photos.photo.map(photo => `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`))\n      .then(res=>this.setState({\n        dogs:{\n          urls: res,\n          loading: false\n        }\n      }))\n      .catch(err => console.log('error fetching and parsing data', err));\n    fetch(`https://api.flickr.com/services/rest/?per_page=24&method=flickr.photos.search&api_key=${apiKey}&tags=computers&format=json&nojsoncallback=1`)\n      .then(res=>res.json())\n      .then(res=>res.photos.photo.map(photo => `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`))\n      .then(res=>this.setState({\n        computers:{\n          urls: res,\n          loading: false\n        }\n      }))\n      .catch(err => console.log('error fetching and parsing data', err));\n  }\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <Route render={() => <SearchForm search={this.handleSearch.bind(this) }/>} />\n          <MainNav />\n          <Switch>\n            <Route path=\"/cats\" render={() => <Gallery urls={this.state.cats.urls} loading = {this.state.cats.loading} searchTerm={'cats'}/>} />\n            <Route path=\"/dogs\" render={() => <Gallery urls={this.state.dogs.urls} loading = {this.state.dogs.loading} searchTerm={'dogs'}/>} />\n            <Route path=\"/computers\" render={() => <Gallery urls={this.state.computers.urls} loading = {this.state.computers.loading} searchTerm={'computers'}/>} />\n            <Route path=\"/search\" render={() => <Gallery urls={this.state.search.urls} loading = {this.state.search.loading} searchTerm={this.state.search.q}/>} />\n            <Route path=\"/\" exact component={Home} />\n            <Route component={NotFound} />\n          </Switch>\n          </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/index.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}